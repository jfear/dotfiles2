# Set prefix to space.
unbind C-b
set -g prefix C-Space
set -g xterm-keys on

# Bindings:
# - to see current bindings:
#   tmux list-keys

# Open new/split panes with the path of the current pane.
unbind c
bind c new-window -c '#{pane_current_path}'
bind-key -n F2 new-window -c '#{pane_current_path}'

unbind %
bind % split-window -h -c '#{pane_current_path}'
unbind '"'
bind '"' split-window -v -c '#{pane_current_path}'

# Vim-like key bindings for pane navigation (default uses cursor keys).
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l # normally used for last-window
bind l select-pane -R

# Resizing (mouse also works).
unbind Left
bind -r Left resize-pane -L 5
unbind Right
bind -r Right resize-pane -R 5
unbind Down
bind -r Down resize-pane -D 5
unbind Up
bind -r Up resize-pane -U 5

# Fast toggle between current and last-used window (normally prefix-l).
bind ^space last-window
bind-key -n F3 previous-window
bind-key -n F4 next-window

# `^space ^space` is awfully close to the destructive `^space space`, which
# trashes the layout. Providea quick way to get back to the previous-used
# layout.
#
# Normally used for previous-window, but I never use that, prefering numeric
# access.
bind p select-layout -o

# Intuitive window-splitting keys.
bind | split-window -h -c '#{pane_current_path}' # normally prefix-%
bind - split-window -v -c '#{pane_current_path}' # normally prefix-"

# Status bar.

set -g status-left-length 40
set -g status-right-length 150

set -g status-fg white
set -g status-bg colour234
#set -g window-status-activity-attr bold
#set -g pane-border-fg colour245
#set -g pane-active-border-fg colour39
#set -g message-fg colour16
#set -g message-bg colour221
#set -g message-attr bold

set -g status-left '#[fg=colour235,bg=colour252,bold]#S §#[fg=colour252,bg=colour234,nobold]⮀'
set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39,bold]⮀#[fg=colour25,bg=colour39,noreverse,bold] #I ⮁ #W #[fg=colour39,bg=colour234,bold]⮀"
set -g status-right "#[fg=colour238,bg=colour234,bold]⮂#[fg=colour245,bg=colour238,bold] #h %l:%M %p"


# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set -g renumber-windows on


# Mouse can be used to select panes, select windows (by clicking on the status
# bar), resize panes. For default bindings see `tmux list-keys`.
set -g mouse on

# Stay in copy mode on drag end.
# (Would use `bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X
# stop-selection` but it is a bit glitchy.)
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# Scroll 3 lines at a time instead of default 5; don't extend dragged selections.
bind-key -T copy-mode-vi WheelUpPane select-pane\; send-keys -t{mouse} -X clear-selection\; send-keys -t{mouse} -X -N 3 scroll-up
bind-key -T copy-mode-vi WheelDownPane select-pane\; send-keys -t{mouse} -X clear-selection\; send-keys -t{mouse} -X -N 3 scroll-down

# Make double and triple click work outside of copy mode (already works inside it with default bindings).
bind-key -T root DoubleClick1Pane if-shell -Ft{mouse} '#{alternate_on}' "send-keys -M" "copy-mode -t{mouse}; send-keys -t{mouse} -X select-word"
bind-key -T root TripleClick1Pane if-shell -Ft{mouse} '#{alternate_on}' "send-keys -M" "copy-mode -t{mouse}; send-keys -t{mouse} -X select-line"

# For those times when C-c and q are not enough.
bind-key -T copy-mode-vi Escape send-keys -X cancel

# Slightly more useful width in "main-vertical" layout; enough room for 3-digit
# line number gutter in Vim + 80 columns of text + 1 column breathing room
# (default looks to be about 79).
set -w -g main-pane-width 85

set -g default-terminal "screen-256color"
set -ga terminal-overrides ',xterm-256color:Tc'

set -g history-limit 4096

# Start window and pane numbering at 1, (0 is too hard to reach).
set -g base-index 1
set -g pane-base-index 1

# Don't wait for an escape sequence after seeing C-a.
set -s escape-time 0

# Dynamically update iTerm tab and window titles.
set -g set-titles on

# Needed as on tmux 1.9 and up (defaults to off).
set -g focus-events on

# But don't change tmux's own window titles.
set -w -g automatic-rename off

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
set -w -g wrap-search off

# #T      = standard window title (last command, see ~/.bash_profile)
# #h      = short hostname
# #S      = session name
# #W      = tmux window name
#
# (Would love to include #(pwd) here as well, but that would only print the
# current working directory relative to the session -- ie. always the starting
# cwd -- which is not very interesting).
set -g set-titles-string "#T : #h > #S > #W"

# Show bells in window titles.
set -g window-status-bell-style fg=yellow,bold,underscore

# Turn off distracting border highlight: the background highlighting is probably
# enough. Default value of 8 comes from "pane-border-fg" in tmux's
# options-table.c.
#set -g pane-active-border-fg 8

# Make sure we always start at 1, even when invoked from a .tmux wrapper script.
set-environment -g SHLVL 1

# Clipper.
bind-key y run-shell "tmux save-buffer - | nc -U ~/.clipper.sock"

# "copy-pipe" requires tmux >= 1.8
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "nc -U ~/.clipper.sock"

# Search back to last prompt (mnemonic: "[b]ack"); searches for non-breaking
# space in prompt.
bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward " "

bind-key -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""

# Analagous with naked C-l which resets/clears the terminal.
bind-key C-l clear-history

source-file -q ~/.tmux-local.conf
